{"version":3,"file":"static/js/786.08aa7dce.chunk.js","mappings":"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","sources":["components/MoviesListing/MoviesListing.jsx","components/MovieSearch/MovieSearch.jsx","pages/Movies.jsx","services/movies-api.js"],"sourcesContent":["import { Link, useLocation } from \"react-router-dom\";\nimport PropTypes from 'prop-types'\n\n\nconst MoviesListing = ({ films }) => {\n    const location = useLocation();\n    \n    return <ul>\n        {films.map(({ id, title }) =>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n                <li key={id}>\n                        <h2>{title}</h2>  \n                </li>\n            </Link>\n        )}\n    </ul>\n};\n\nMoviesListing.propTypes = {\n    films: PropTypes.arrayOf(\n        PropTypes.objectOf(\n            PropTypes.node.isRequired,\n        ).isRequired,\n    ).isRequired,\n};\n\nexport default MoviesListing;","import PropTypes from 'prop-types'\n\nconst Searchbar = ({ onSubmitSearchBar, value }) => (\n    <header>\n    <form onSubmit={onSubmitSearchBar}>\n        <button>\n            <span>Search</span>\n        </button>\n\n        <input\n            type=\"text\"\n            name=\"search\"\n            autoComplete=\"off\"\n            autoFocus\n            defaultValue={value}\n            placeholder=\"Search movies\"\n        />\n    </form>\n    </header>\n);\n\nSearchbar.propTypes = {\n    onSubmitSearchBar: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;","import MoviesListing from \"components/MoviesListing/MoviesListing\";\nimport Searchbar from \"components/MovieSearch/MovieSearch\";\nimport { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { getSearchMovies, handleFetchError } from \"services/movies-api\";\n\nconst endPoint = '/search/movie';\n\nconst Movies = () => {\n  const [films, setFilms] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query') ?? \"\";\n  \n  useEffect(() => {\n    if (searchQuery === '') {\n      return;\n    };\n    if (films.length > 0) {\n      return;\n    };\n\n  \n    getSearchMovies(endPoint, searchQuery)\n      .then(data => {\n        setFilms(data.results);\n      })\n      .catch(handleFetchError);\n    \n  }, [films, searchQuery]);\n\n  const onSubmitSearchBar = (event) => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const searchValue = form.search.value\n      .trim()\n      .toLowerCase()\n      .split(' ')\n      .join('+');;\n    \n    if (searchValue === '') {\n      alert('Enter your request, please!');\n      setSearchParams({});\n      setFilms([]);\n      return;\n    };\n\n    if (searchValue === searchQuery) {\n      alert('Enter new request, please!');\n      return;\n    };\n\n    setSearchParams({ query: searchValue });\n    setFilms([]);\n  };\n\n  return <div>\n    <Searchbar onSubmitSearchBar={onSubmitSearchBar} value={searchQuery} />\n    <section>\n      <MoviesListing films={films} />\n    </section>\n  </div>\n};\n\nexport default Movies;","import axios from \"axios\";\n\nconst URL = \"https://api.themoviedb.org/3\";\nconst KEY = \"0c47dfbd6e6c78608dc1f0b39b4dd72d\";\n\nexport async function getMovies(endPoint) {\n    const url = `${URL}${endPoint}?api_key=${KEY}`\n    const response = await axios.get(url);\n    return response.data;\n};\n\nexport async function getMovieDetails(endPoint, movieId) {\n    const url = `${URL}${endPoint}/${movieId}?api_key=${KEY}`\n    const response = await axios.get(url);\n    return response.data;\n};\n\nexport async function getMovieCast(endPoint, movieId) {\n    const url = `${URL}${endPoint}/${movieId}/credits?api_key=${KEY}`\n    const response = await axios.get(url);\n    return response.data;\n};\n\nexport async function getMovieReviews(endPoint, movieId) {\n    const url = `${URL}${endPoint}/${movieId}/reviews?api_key=${KEY}`\n    const response = await axios.get(url);\n    return response.data;\n};\n\nexport async function getSearchMovies(endPoint, query) {\n    const url = `${URL}${endPoint}?api_key=${KEY}&query=${query}`\n    const response = await axios.get(url);\n    return response.data;\n};\nexport function handleFetchError() {\n   alert('Oops! Something went wrong! Try reloading the page or make another choice!');\n};"],"names":["films","location","useLocation","map","id","title","to","state","from","onSubmitSearchBar","value","onSubmit","type","name","autoComplete","autoFocus","defaultValue","placeholder","useState","setFilms","useSearchParams","searchParams","setSearchParams","searchQuery","get","useEffect","length","getSearchMovies","then","data","results","catch","handleFetchError","event","preventDefault","searchValue","currentTarget","search","trim","toLowerCase","split","join","alert","query","MoviesListing","URL","KEY","getMovies","endPoint","url","axios","response","getMovieDetails","movieId","getMovieCast","getMovieReviews"],"sourceRoot":""}