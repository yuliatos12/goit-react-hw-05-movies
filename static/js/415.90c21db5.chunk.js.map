{"version":3,"file":"static/js/415.90c21db5.chunk.js","mappings":"oKA0BA,IAtBsB,SAAC,GAAe,IAAbA,EAAY,EAAZA,MACfC,GAAWC,EAAAA,EAAAA,MAEjB,OAAO,wBACFF,EAAMG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACP,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA1C,UACI,yBACQ,wBAAKI,KADJD,IAFN,KAQlB,C,8ECSD,UAnBa,WACT,OAA0BK,EAAAA,EAAAA,UAAS,IAAnC,eAAOT,EAAP,KAAcU,EAAd,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACFX,EAAMY,OAAS,IAGnBC,EAAAA,EAAAA,IATS,uBAUJC,MAAK,SAAAC,GACFL,EAASK,EAAKC,QACjB,IACAC,MAAMC,EAAAA,GACd,GAAE,CAAClB,KAEG,8BACH,SAAC,IAAD,CAAeA,MAAOA,KAE7B,C,uNCrBKmB,EAAM,+BACNC,EAAM,mCAEL,SAAeP,EAAtB,+CAAO,OAAP,oBAAO,WAAyBQ,GAAzB,gFACGC,EADH,UACYH,GADZ,OACkBE,EADlB,oBACsCD,GADtC,SAEoBG,EAAAA,EAAAA,IAAUD,GAF9B,cAEGE,EAFH,yBAGIA,EAAST,MAHb,kEAMA,SAAeU,EAAtB,iDAAO,OAAP,oBAAO,WAA+BJ,EAAUK,GAAzC,gFACGJ,EADH,UACYH,GADZ,OACkBE,EADlB,YAC8BK,EAD9B,oBACiDN,GADjD,SAEoBG,EAAAA,EAAAA,IAAUD,GAF9B,cAEGE,EAFH,yBAGIA,EAAST,MAHb,kEAMA,SAAeY,EAAtB,iDAAO,OAAP,oBAAO,WAA4BN,EAAUK,GAAtC,gFACGJ,EADH,UACYH,GADZ,OACkBE,EADlB,YAC8BK,EAD9B,4BACyDN,GADzD,SAEoBG,EAAAA,EAAAA,IAAUD,GAF9B,cAEGE,EAFH,yBAGIA,EAAST,MAHb,kEAMA,SAAea,EAAtB,iDAAO,OAAP,oBAAO,WAA+BP,EAAUK,GAAzC,gFACGJ,EADH,UACYH,GADZ,OACkBE,EADlB,YAC8BK,EAD9B,4BACyDN,GADzD,SAEoBG,EAAAA,EAAAA,IAAUD,GAF9B,cAEGE,EAFH,yBAGIA,EAAST,MAHb,kEAMA,SAAec,EAAtB,iDAAO,OAAP,oBAAO,WAA+BR,EAAUS,GAAzC,gFACGR,EADH,UACYH,GADZ,OACkBE,EADlB,oBACsCD,EADtC,kBACmDU,GADnD,SAEoBP,EAAAA,EAAAA,IAAUD,GAF9B,cAEGE,EAFH,yBAGIA,EAAST,MAHb,kEAKA,SAASG,IACba,MAAM,gDACR,C","sources":["components/MoviesListing/MoviesListing.jsx","pages/Home.jsx","services/movies-api.js"],"sourcesContent":["import { Link, useLocation } from \"react-router-dom\";\nimport PropTypes from 'prop-types'\n\n\nconst MoviesListing = ({ films }) => {\n    const location = useLocation();\n    \n    return <ul>\n        {films.map(({ id, title }) =>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n                <li key={id}>\n                        <h2>{title}</h2>  \n                </li>\n            </Link>\n        )}\n    </ul>\n};\n\nMoviesListing.propTypes = {\n    films: PropTypes.arrayOf(\n        PropTypes.objectOf(\n            PropTypes.node.isRequired,\n        ).isRequired,\n    ).isRequired,\n};\n\nexport default MoviesListing;","import MoviesListing from \"components/MoviesListing/MoviesListing\";\nimport { useEffect, useState } from \"react\";\nimport { getMovies, handleFetchError } from \"services/movies-api\";\n\nconst endPoint = \"/trending/movie/day\";\n\nconst Home = () => {\n    const [films, setFilms] = useState([]);\n    \n    useEffect(() => {\n        if (films.length > 0) {\n            return;\n        };\n        getMovies(endPoint)\n            .then(data => {\n                setFilms(data.results);\n            })\n            .catch(handleFetchError);\n    }, [films]);\n\n    return <section>\n        <MoviesListing films={films} />\n    </section>\n};\n\nexport default Home;","import axios from \"axios\";\n\nconst URL = \"https://api.themoviedb.org/3\";\nconst KEY = \"0c47dfbd6e6c78608dc1f0b39b4dd72d\";\n\nexport async function getMovies(endPoint) {\n    const url = `${URL}${endPoint}?api_key=${KEY}`\n    const response = await axios.get(url);\n    return response.data;\n};\n\nexport async function getMovieDetails(endPoint, movieId) {\n    const url = `${URL}${endPoint}/${movieId}?api_key=${KEY}`\n    const response = await axios.get(url);\n    return response.data;\n};\n\nexport async function getMovieCast(endPoint, movieId) {\n    const url = `${URL}${endPoint}/${movieId}/credits?api_key=${KEY}`\n    const response = await axios.get(url);\n    return response.data;\n};\n\nexport async function getMovieReviews(endPoint, movieId) {\n    const url = `${URL}${endPoint}/${movieId}/reviews?api_key=${KEY}`\n    const response = await axios.get(url);\n    return response.data;\n};\n\nexport async function getSearchMovies(endPoint, query) {\n    const url = `${URL}${endPoint}?api_key=${KEY}&query=${query}`\n    const response = await axios.get(url);\n    return response.data;\n};\nexport function handleFetchError() {\n   alert('Something went wrong! Try reloading the page!');\n};"],"names":["films","location","useLocation","map","id","title","to","state","from","useState","setFilms","useEffect","length","getMovies","then","data","results","catch","handleFetchError","URL","KEY","endPoint","url","axios","response","getMovieDetails","movieId","getMovieCast","getMovieReviews","getSearchMovies","query","alert"],"sourceRoot":""}