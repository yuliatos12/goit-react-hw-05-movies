{"version":3,"file":"static/js/186.9b38c91e.chunk.js","mappings":"8LAsCA,UA/BgB,WACZ,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACDL,IAILM,EAAAA,EAAAA,IAXS,SAWiBN,GACrBO,MAAK,SAAAC,GACFJ,EAAWI,EAAKC,QACnB,IACAC,MAAMC,EAAAA,GACd,GAAE,CAACX,KAEG,iCACH,qCAEoB,IAAnBG,EAAQS,QACL,wBACKT,EAAQU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACT,2BACI,0BAAG,mCAAH,IAAmBD,MACnB,uBAAIC,MAFCF,EADA,OAMjB,6EAEX,C,uNClCKG,EAAM,+BACNC,EAAM,mCAEL,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,gFACGC,EADH,UACYJ,GADZ,OACkBG,EADlB,oBACsCF,GADtC,SAEoBI,EAAAA,EAAAA,IAAUD,GAF9B,cAEGE,EAFH,yBAGIA,EAASf,MAHb,kEAMA,SAAegB,EAAtB,iDAAO,OAAP,oBAAO,WAA+BJ,EAAUpB,GAAzC,gFACGqB,EADH,UACYJ,GADZ,OACkBG,EADlB,YAC8BpB,EAD9B,oBACiDkB,GADjD,SAEoBI,EAAAA,EAAAA,IAAUD,GAF9B,cAEGE,EAFH,yBAGIA,EAASf,MAHb,kEAMA,SAAeiB,EAAtB,iDAAO,OAAP,oBAAO,WAA4BL,EAAUpB,GAAtC,gFACGqB,EADH,UACYJ,GADZ,OACkBG,EADlB,YAC8BpB,EAD9B,4BACyDkB,GADzD,SAEoBI,EAAAA,EAAAA,IAAUD,GAF9B,cAEGE,EAFH,yBAGIA,EAASf,MAHb,kEAMA,SAAeF,EAAtB,iDAAO,OAAP,oBAAO,WAA+Bc,EAAUpB,GAAzC,gFACGqB,EADH,UACYJ,GADZ,OACkBG,EADlB,YAC8BpB,EAD9B,4BACyDkB,GADzD,SAEoBI,EAAAA,EAAAA,IAAUD,GAF9B,cAEGE,EAFH,yBAGIA,EAASf,MAHb,kEAMA,SAAekB,EAAtB,iDAAO,OAAP,oBAAO,WAA+BN,EAAUO,GAAzC,gFACGN,EADH,UACYJ,GADZ,OACkBG,EADlB,oBACsCF,EADtC,kBACmDS,GADnD,SAEoBL,EAAAA,EAAAA,IAAUD,GAF9B,cAEGE,EAFH,yBAGIA,EAASf,MAHb,kEAKA,SAASG,IACbiB,MAAM,6EACR,C","sources":["components/Reviews/Reviews.jsx","services/movies-api.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\"\nimport { getMovieReviews, handleFetchError } from \"services/movies-api\";\n\n\nconst endPoint = '/movie';\n\nconst Reviews = () => {\n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState([]);\n\n    useEffect(() => {\n        if (!movieId) {\n            return;\n        };\n\n        getMovieReviews(endPoint, movieId)\n            .then(data => {\n                setReviews(data.results);\n            })\n            .catch(handleFetchError);\n    }, [movieId]);\n\n    return <>\n        <h3>Reviews:</h3>\n       \n        {reviews.length !== 0 ?\n            <ul>\n                {reviews.map(({ id, author, content }) =>\n                    <li key={id}>\n                        <p><b>Author:</b> {author}</p>\n                        <p>{content}</p>\n                    </li>)}\n            </ul> :\n            <p>Sorry! We don't have any reviews for this movie</p>}\n    </>\n};\n\nexport default Reviews;","import axios from \"axios\";\n\nconst URL = \"https://api.themoviedb.org/3\";\nconst KEY = \"0c47dfbd6e6c78608dc1f0b39b4dd72d\";\n\nexport async function getMovies(endPoint) {\n    const url = `${URL}${endPoint}?api_key=${KEY}`\n    const response = await axios.get(url);\n    return response.data;\n};\n\nexport async function getMovieDetails(endPoint, movieId) {\n    const url = `${URL}${endPoint}/${movieId}?api_key=${KEY}`\n    const response = await axios.get(url);\n    return response.data;\n};\n\nexport async function getMovieCast(endPoint, movieId) {\n    const url = `${URL}${endPoint}/${movieId}/credits?api_key=${KEY}`\n    const response = await axios.get(url);\n    return response.data;\n};\n\nexport async function getMovieReviews(endPoint, movieId) {\n    const url = `${URL}${endPoint}/${movieId}/reviews?api_key=${KEY}`\n    const response = await axios.get(url);\n    return response.data;\n};\n\nexport async function getSearchMovies(endPoint, query) {\n    const url = `${URL}${endPoint}?api_key=${KEY}&query=${query}`\n    const response = await axios.get(url);\n    return response.data;\n};\nexport function handleFetchError() {\n   alert('Oops! Something went wrong! Try reloading the page or make another choice!');\n};"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","getMovieReviews","then","data","results","catch","handleFetchError","length","map","id","author","content","URL","KEY","getMovies","endPoint","url","axios","response","getMovieDetails","getMovieCast","getSearchMovies","query","alert"],"sourceRoot":""}